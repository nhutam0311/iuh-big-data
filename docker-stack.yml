version: '3.8'

services:
  # Dockercoins services
  rng:
    build: rng
    image: 192.168.19.10:5000/rng
    ports:
      - "8001:80"  # Public port cho RNG service
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - hoangkhang-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  hasher:
    build: hasher
    image: 192.168.19.10:5000/hasher
    ports:
      - "8002:80"  # Public port cho Hasher service
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - hoangkhang-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  webui:
    build: webui
    image: 192.168.19.10:5000/webui
    ports:
      - "8000:80"  # Public port cho WebUI service
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - "./webui/files/:/files/"
    networks:
      - hoangkhang-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"  # Public port cho Redis
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - hoangkhang-net

  worker:
    build: worker
    image: 192.168.19.10:5000/worker
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - hoangkhang-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ELK Stack
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    ports:
      - "9200:9200"  # Public port cho Elasticsearch API
      - "9300:9300"  # Public port cho Elasticsearch node communication
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      - "bootstrap.memory_lock=true"
      - "xpack.security.enabled=false"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "cluster.routing.allocation.disk.watermark.low=500mb"
      - "cluster.routing.allocation.disk.watermark.high=300mb"
    volumes:
      - ./elk/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch-data:/usr/share/elasticsearch/data
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 384M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 120s
      placement:
        constraints:
          - node.role == manager
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - hoangkhang-net

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    ports:
      - "5044:5044"  # Public port cho Filebeat input
      - "9600:9600"  # Public port cho Logstash API
      - "8080:8080"  # Public port cho HTTP input
    volumes:
      - ./elk/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - "LS_JAVA_OPTS=-Xms64m -Xmx128m"
      - "config.reload.automatic=true"
      - "http.host=0.0.0.0"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 120s
      placement:
        constraints:
          - node.role == manager
    depends_on:
      - elasticsearch
    networks:
      - hoangkhang-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    ports:
      - "5601:5601"  # Public port cho Kibana
    volumes:
      - ./elk/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
      - "SERVER_NAME=kibana"
      - "XPACK_SECURITY_ENABLED=false"
      - "XPACK_REPORTING_ENABLED=false"
      - "TELEMETRY_ENABLED=false"
      - "TELEMETRY_OPTIN=false"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    depends_on:
      - elasticsearch
    networks:
      - hoangkhang-net

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.14.0
    volumes:
      - ./elk/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    user: root
    deploy:
      mode: global
    networks:
      - hoangkhang-net

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:v2.30.0
    ports:
      - "9090:9090"  # Public port cho Prometheus
    volumes:
      - ./monitoring/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
    networks:
      - hoangkhang-net

  # Node-exporter có thể gặp vấn đề trên ARM
  node-exporter:
    image: prom/node-exporter:v1.2.2
    ports:
      - "9100:9100"  # Public port cho Node Exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
    networks:
      - hoangkhang-net

  # cAdvisor bị bỏ qua vì không tương thích với ARM
  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:v0.39.3
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /dev/disk/:/dev/disk:ro
  #   deploy:
  #     mode: global
  #   networks:
  #     - hoangkhang-net

  grafana:
    image: grafana/grafana:8.1.2
    ports:
      - "3000:3000"  # Public port cho Grafana
    volumes:
      - ./monitoring/config/grafana.ini:/etc/grafana/grafana.ini
      - grafana-data:/var/lib/grafana
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 256M
    networks:
      - hoangkhang-net

  influxdb:
    image: influxdb:1.8
    ports:
      - "8086:8086"  # Public port cho InfluxDB API
      - "2003:2003"  # Public port cho Graphite protocol
    volumes:
      - ./monitoring/config/influxdb.conf:/etc/influxdb/influxdb.conf
      - influxdb-data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=prometheus
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 384M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 120s
      placement:
        constraints:
          - node.role == manager
    networks:
      - hoangkhang-net

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - hoangkhang-net

networks:
  hoangkhang-net:
    external: true

volumes:
  elasticsearch-data:
  prometheus-data:
  grafana-data:
  influxdb-data:
